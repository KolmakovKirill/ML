import streamlit as st
from diffusers import StableDiffusionPipeline
import torch

@st.cache_resource
def load_pipeline():
    model_id = "CompVis/stable-diffusion-v1-4"
    pipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16 if torch.cuda.is_available() else torch.float32)
    pipe = pipe.to("cuda" if torch.cuda.is_available() else "cpu")
    return pipe

pipe = load_pipeline()

st.title("üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é (Stable Diffusion)")

prompt = st.text_input("–û–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)", "a fantasy landscape with castles and dragons")

steps = st.slider("–ß–∏—Å–ª–æ —à–∞–≥–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", 10, 100, 50)
seed = st.number_input("–°–ª—É—á–∞–π–Ω–æ–µ –∑–µ—Ä–Ω–æ (seed)", value=42)

if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"):
    generator = torch.manual_seed(seed)
    with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."):
        image = pipe(prompt, num_inference_steps=steps, generator=generator).images[0]
        st.image(image, caption="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)
